# Default values for foundry-vtt.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


## @section Image Parameters
## @param image.pullPolicy pullPolicy for the Image
## @param image.repository Repository to take the Image from
## @param image.tag Image Tag
image:
  pullPolicy: IfNotPresent
  repository: felddy/foundryvtt
  tag: "12.328"


## @section Persistence Storage Parameters
## @param persistence.bind.enabled Enable bind mount for persistence storage
## @param persistence.bind.hostpath Path in the host where to bind
## @param persistence.storageClass: Storage Class to use when creating the Persistent Volume Claim
## @param persistence.dataDir.enabled Enable the PVC
## @param persistence.dataDir.size Size of the PVC
## @param persistence.shared.enabled Enable tha shared mount for a NFS file system or a shared bind point with for sharing assets between multiple game instances when not using s3.
## @param persistence.shared.mounts Shared mount points configurations for bind or pvc usage
## - containerPath: is relative to the /data/Data
##   type: bind or pvc
##   hostpath: only used for bind mount
##   readOnly: enable read only directories
##   clainName: to be used mainly with NFS CSI PV/PVC
persistence:
  ## Foundry VTT data Persistent Volume Storage Class
  ## Bind mount is mutually exclusive.
  ## when storageClass for PV is enable this is automatically disabled
  ## To use bind.enabled == true and dataDir.enabled == false
  storageClass: "local-path"
  dataDir:
    # Set this to false if you don't care to persist state between restarts.
    enabled: true
    size: 5Gi


service:
  serviceType: LoadBalancer
  port: 80
  externalTrafficPolicy: ""


## @section Ingress Parameters
## @param ingress.class Chosse the type of Ingress controller
## @param ingress.enabled Enable Ingress creations
## @param ingress.hostname Hostname for FoundryVTT
## @param ingress.annotations Ingress Annotations, useful for TLS
## @param ingress.path FoundryVTT Path
## @param ingress.pathType Type of Path
## @param ingress.tls.enabled Enable or Disable TLS
## @param ingress.tls.source the source of your signed certification, allowed {}, external, secret, or letsEncrypt
## @param ingress.configurationSnippet Extra NGINX Configuration to add as Annotation
ingress:
  # options: nginx, contour
  class: nginx
  hostname: speggles.blafasel.com
  enabled: true
  path: "/"
  pathType: Prefix
  annotations:
      kubernetes.io/ingress.class: traefik
      cert-manager.io/cluster-issuer: letsencrypt-staging

    ## E.g.
    # nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    # nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    # nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"

  # configurationSnippet - Add additional Nginx configuration. This example statically sets a header on the ingress.
  configurationSnippet: ""
  ## E.g.
  # configurationSnippet: |
  #   more_set_input_headers "X-Forwarded-Host: {{ .Values.foundryvtt.hostname }}";
  tls:
    enabled: true
    # {}, external, secret, or letsEncrypt
    source: letsEncrypt

## @section Let's Encrypt configuration
## @param letsEncrypt.enabled Enable the Let's Encrypt for Cert Manager
## @param letsEncrypt.email
## @param letsEncrypt.environment environment for Let's Encrypt it can be 'staging' or 'production'
letsEncrypt:
  enabled: true
  email: maxdanelli@gmail.com
  # ProTip: The production environment only allows you to register a name 5 times a week.
  #         Use staging until you have your config right.
  environment: staging


## @section Certmanager Configuration
## @param certmanager.version Certmanager version compatibility
certmanager:
  version: "v1.16.3"

